@{
    ViewBag.Title = "Home";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_InstructorLayout.cshtml";
}
@using StudentDashboard.Models.Instructor;
@model ClassRoomModal
<style type="text/css">
    .classroom-background-container {
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }

    .classroom-background-image {
        max-height: 300px;
        height: 300px;
        z-index: -1;
    }

    .classroom-background-mask {
        width: 100%;
        border: 10px;
        z-index: 10;
        background: rgb(3,0,237);
        background: linear-gradient(360deg, rgba(3,0,237,0.969625350140056) 5%, rgba(11,33,196,0.7063200280112045) 77%);
        backdrop-filter: blur(8px);
        padding: 20px;
        margin-top: 140px;
        margin-bottom: 20px;
        color: #f8f9fccc !important;
        border-radius: 8px;
    }

    .classroom-background {
        padding-top: 10px;
        align-items: center;
        overflow-y: no-display;
        background: #f8f8f8;
        margin-bottom: 10px;
        text-align: center;
        border: 3px solid #eee;
        box-shadow: 2px;
        border-radius: 8px;
    }

        .classroom-background:hover {
            border: 2px solid red;
        }

    .upload-icon {
        font-size: 72px;
        align-items: center;
    }

    .ui-input-container {
        background-color: #fff;
        border-radius: 4px;
    }

    .ui-input-container-message {
        background-color: #fff;
        border-radius: 4px;
        max-height: 300px;
        overflow-y: scroll;
    }

    .ui-form-input-container {
        position: relative;
        font-size: 1rem;
        margin-bottom: 15px;
        display: block;
    }

    .ui-input-container h2 {
        font-family: sans-serif;
        margin-bottom: 20px;
        font-weight: 700;
        text-transform: capitalize;
    }

    .ui-form-input {
        padding: 13px 15px;
        border-radius: 8px;
        border: 2px solid #1a73e8;
        outline: 0;
        width: 100%;
        max-height: 200px;
    }

    .ui-form-chat {
        padding: 13px 15px;
        margin-bottom: 0px;
        border-radius: 8px;
        border: 2px solid #1a73e8;
        outline: 0;
        width: 70%;
        float: right;
    }

    .ui-form-chat-instructor {
        padding: 13px 8px;
        margin-bottom: 0px;
        border-radius: 8px;
        background-color:#757575;
        color:#fafafa;
      
        outline: 0;
        width: 70%;
        float: left;
    }

    .time_date {
        margin-top: 5px;
        margin-bottom: 10px;
        color: #747474;
        display: block;
        font-size: 12px;
        width: 70%;
        float: right;
    }

    .time_date_instructor {
        margin-top: 5px;
        margin-bottom: 10px;
        color: #747474;
        display: block;
        font-size: 12px;
        width: 70%;
        float: left;
    }

    .messge-sender {
        margin-top: 5px;
        margin-bottom: 10px;
        color: rgba(3,0,237,0.969625350140056);
        display: block;
        font-size: 18px;
        width: 70%;
        float: left;
    }

    #zmmtg-root {
        background-color: aquamarine;
    }
.classroom-nav li a:hover {
  border-bottom: 3px solid red;
}

.classroom-nav li a:active {
  border-bottom: 3px solid red;
}
.classroom-nav li a.active {
  border-bottom: 3px solid red;
}
.classroom-nav a.active {
  border-bottom: 3px solid red;
}
.classroom-nav li a active {
  border-bottom: 3px solid red;
}

    @@media only screen and (max-width: 600px) {
        .container-classroom-section {
            padding-left: 0rem;
            padding-right: 0rem;
        }
    }
</style>
<div class="container-classroom-section container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Classroom Dashboard</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" onclick="callHome()">Home</a></li>
                <li class="breadcrumb-item"><a href="#" onclick="callViewAllClassroom()">Classrooms</a></li>
                <li class="breadcrumb-item active" aria-current="page">Classroom Dashboard</li>

            </ol>
        </nav>
    </div>
    <div class="row">
        <div class="col-lg-12 mb-4">
            <div class="card shadow mb-4 border-bottom-success ">
                <div class="card-body classroom-background-container" style="background-image:url(../../Images/course-3.jpg)">
                    <div class="classroom-background-mask">
                        <h1 class="card-text font-weight-bold text-gray-100 ">@Model.m_strClassRoomName </h1>
                        <label class="mb-0 font-weight-bold">
                            @Model.m_strClassRoomDescription
                        </label>
                        <p class="text mr-3  text-white" id="courseCreationDate"><b>Creation date:</b> @Model.m_strCreationDate </p>
                        <span class="badge badge-pill badge-light" id="successbadge">Status: @Model.m_strClassroomStatus</span>

                        @if (Model.m_strClassroomStatus == "created")
                        {
                            <span><button class="btn btn-outline-light custom-green text-white font-weight-bold" id="enrollNowButton" onclick="activateClassroom()">Activate</button></span>
                        }
                        else
                        {
                            
                        }


                    </div>

                </div>
            </div>
        </div>


    </div>
    <!-- Content Row -->
    @*<div class="row">
            <!-- Earnings (Monthly) Card Example -->
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Posts</div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">0</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-play-circle fa-2x text-primary"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Earnings (Monthly) Card Example -->
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-success shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Assignments added</div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">0</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-pen fa-2x text-primary"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Earnings (Monthly) Card Example -->
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-success shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Tests added</div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">0</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-pen fa-2x text-primary"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Pending Requests Card Example -->
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-left-warning shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Students joined</div>
                                <div class="h5 mb-0 font-weight-bold text-gray-800">0</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-users fa-2x text-primary"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
    <div class="col-lg-12">
        <nav class="navbar navbar-expand-lg  navbar-light font-weight-bold">
            @*<a class="navbar-brand" href="#">@Model.m_strClassRoomName</a>*@
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto classroom-nav">
                    <li class="nav-item">
                        <a class="nav-link active" href="#navHome" onclick="hideAll()">Home <span class="sr-only">(current)</span></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#navMessagesContainer" onclick="showMessages()">Messages</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#navStudentsJoined" onclick="showStudentsJoined()">Students Joined</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#navTests" onclick="showTests()">Tests</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Assignments
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="CreateClassroomAssignment?id=@Model.m_llClassRoomId">Add new assignment</a>
                            <a class="dropdown-item" href="#shareModal" onclick="viewClassroomSharingDetails()">View all assignment</a>
                        </div>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Tests
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="#navUpdateDetails" onclick="showUpdateMeeting()">Add new test</a>
                            <a class="dropdown-item" href="#shareModal" onclick="viewClassroomSharingDetails()">View all tests</a>
                        </div>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Actions
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="#navUpdateDetails" onclick="showUpdateMeeting()">Update Details</a>
                            @*<a class="dropdown-item" href="#">Delete Classroom</a>*@
                            <a class="dropdown-item" href="#shareModal" onclick="viewClassroomSharingDetails()">Share classroom</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="#" onclick="callHome()">Exit classroom</a>
                        </div>
                    </li>
                </ul>
                @*<form class="form-inline my-2 my-lg-0">
                    <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                </form>*@
            </div>
        </nav>
    </div>
    <div class="col-lg-12 mb-2" id="navHome">
        <div class="card shadow-lg border-primary">
            <div class="card-body">
                <div class="add-items-container p-3 text-center ">
                    <div class="control-buttons">
                        @*<button class="btn btn-circle bg-primary text-white" onclick="requestUploadVideo()" data-toggle="tooltip" data-placement="top" title="Upload video"><span><i class="fa fa-file"></i></span></button>*@
                        @*<button class="btn btn-circle bg-primary text-white" onclick="callAddNewAssignment()" data-toggle="tooltip" data-placement="top" title="Add assignment"><i class="fa fa-pen"></i></button>
                            <button class="btn btn-circle bg-primary text-white" data-toggle="tooltip" data-placement="top" title="Add test"><span><i class="fa fa-clipboard-list" ></i></span></button>*@
                        @if (Model.m_strClassroomStatus == "active")
                        {
                            <a class="btn  bg-primary text-white" href="#" onclick="requestStartMeeting()" data-toggle="tooltip" data-placement="top" title="Start meeting now"><span><i class="fa fa-play-circle"></i></span> Start meeting</a>

                        }
                        else
                        {
                            <h1>Please activate the classroom to start any action.</h1>
                        }
                    </div>
                </div>
            </div>
            <div id="secctionTest"></div>
        </div>
    </div>
    @if (Model.m_strClassroomStatus == "active")
    {
        <div class="col-lg-12 mb-2" id="navUpdateDetails" style="display:none">
            <div class="card shadow-lg border-primary">
                <div class="card-header">Update classroom details</div>
                <div class="card-body">
                    <div class="form-group row">
                        <label for="inputPassword" class="col-sm-3 col-form-label">Name of Classroom</label>
                        <div class="col-sm-8">
                            <input onchange="validateInputField(this)" type="text" name="courseName" class="form-control" id="classroomName" placeholder="Enter name of classroom" value="@Model.m_strClassRoomName">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="inputPassword" class="col-sm-3 col-form-label">Description of Classroom</label>
                        <div class="col-sm-8">
                            <textarea type="text" onchange="validateInputField(this)" placeholder="Enter classroom description" id="classroomDescription" name="courseContents" rows="2" class="form-control md-textarea">@Model.m_strClassRoomDescription</textarea>
                        </div>

                    </div>
                    <button class="btn btn-sm btn-primary" onclick="callUpdateClassRoomDetails(this)" >Update</button>
                </div>
            </div>
        </div>

        <div class="col-lg-12 mb-2" id="navAddNewAssignment" style="display:none">
            <div class="card shadow-lg border-primary">
                <div class="card-header">Add new assignment</div>
                <div class="card-body">
                </div>   
            </div>
        </div>
        <div class="col-lg-12 mb-2" id="navAddNewAssignment" style="display:none">
            <div class="card shadow-lg border-primary">
                <div class="card-header">View all assignments</div>
                <div class="card-body">
                </div>
            </div>
        </div>
        <div class="col-lg-12 mb-2" id="navAddNewAssignment" style="display:none">
            <div class="card shadow-lg border-primary">
                <div class="card-header">Add new test</div>
                <div class="card-body">
                </div>
            </div>
        </div>
        <div class="col-lg-12 mb-2" id="navAddNewAssignment" style="display:none">
            <div class="card shadow-lg border-primary">
                <div class="card-header">View all tests</div>
                <div class="card-body">
                </div>
            </div>
        </div>
        <div class="row" >
            <div class="col-lg-6 mb-2" style="display:none" id="navMessagesContainer">
                <div class="card shadow-lg border-primary">
                    <div class="card-header">Messages</div>
                    <div class="card-body">

                        <div class="ui-input-container-message "  id="messagesContainer">
                            <div class="question" id="questionContainer">
                            </div>
                        </div>
                        <div class="add-items-container p-3">
                            <div class="ui-input-container">

                                <label class="ui-form-input-container">
                                    <textarea class="ui-form-input" id="classroomMessage" placeholder="Message"></textarea>
                                </label>
                                <button type="button" onclick="callSubmitMessage(this)" class="btn btn-primary btn-sm">submit</button>
                            </div>
                        </div>
                    </div>
                    <div id="secctionTest"></div>
                </div>
            </div>
            <div class="col-lg-6 mb-2" id="navSharingDetails" style="display:none">
                <div class="card shadow-lg border-primary">
                    <div class="card-header">Sharing details</div>
                    <div class="card-body">
                        <div class="add-items-container p-3 text-center ">
                            <div class="control-buttons">
                                <p>Share url: <input type="text" readonly="readonly" id="test-url" value="@Model.m_strShareUrl" /><span><button class="btn-sm btn-primary ml-2" onclick="copyText()">copy<i class="ml-1 fa fa-copy"></i></button></span></p>
                            </div>

                            <button class="btn btn-outline-primary" onclick="viewClassroomSharingDetails()" data-toggle="tooltip" data-placement="top" title="View sharing details"><i class="fa fa-share"></i>View sharing details</button>
                        </div>
                    </div>
                    <div id="secctionTest"></div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-12 mb-2" id="navStudentsJoined" style="display:none">
            <div class="card shadow-lg border-primary">
                <div class="card-header">Students Joined</div>
                <div class="card-body">
                    <div class="table-responsive ">
                        <table id="studentDetailsTable" class="table-responsive table-hover" style="display:none">
                            <thead class="thead-dark">
                                <tr>
                                    <th>S.No.</th>
                                    <th class="p-2">Student Name</th>
                                    <th class="p-2">Joining Date</th>
                                </tr>
                            </thead>

                            <tbody id="tableBodyStudentDetails"></tbody>
                        </table>
                        <div id="spinnerStudentDetails" class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>

                    <div class="card text-center" id="footerStudentsJoined" style="display:none">
                        <div class="card-body">
                            <h6 class="card-title"> No students have joined.</h6>
                        </div>

                    </div>
                </div>

            </div>
        </div>
            <div class="col-lg-12 mb-2" id="navPreviousMeetings" style="display:none">
                <div class="card shadow-lg border-primary">
                    <div class="card-header">Previous Meetings</div>
                    <div class="card-body">
                        <div class="table-responsive ">
                            <table id="coursesTable" class="table-responsive table-hover" style="display:none">
                                <thead class="thead-dark">
                                    <tr>
                                        <th>S.No.</th>
                                        <th class="p-2">Start time</th>
                                        <th class="p-2">Close time</th>
                                        <th>Students joined</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>

                                <tbody id="tableBody"></tbody>
                            </table>
                            <div id="spinner" class="d-flex justify-content-center">
                                <div class="spinner-border" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                        </div>

                        <div class="card text-center" id="footer" style="display:none">
                            <div class="card-body">
                                <h6 class="card-title"> You have not started any meetings</h6>
                                <div id="assignmentContainer" class="assignmentContainer"></div>

                            </div>
                            <div class="card-footer text-muted">
                                Thank you!
                            </div>
                        </div>
                    </div>

                </div>

                <div id="secctionTest"></div>
            </div>
    }
</div>
<div class="modal fade" id="requestStartMeeting" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAndUpdateIndexTopicHeader">Are you sure to want to start the meeting?</h5>
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="resetAddTopicModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>*@
            </div>
            <div class="modal-body">
                <form method="post" class="needs-validation" action="RequestStartMeeting" novalidate>
                    @Html.AntiForgeryToken()
                    @*<div class="form-group">
                            <label for="recipient-name" class="col-form-label">Meeting Id</label>
                            <input type="text" name="test_id" class="form-control" id="testModalId" placeholder="Enter meeting id"  >
                        </div>
                        <div class="form-group">
                            <label for="recipient-name" class="col-form-label" id="bc-topicNameLabel">Meeting Password</label>
                            <input type="text" name="test_access_code" class="form-control" id="testModalAccessCode" placeholder="Enter access code">
                        </div>*@
                    <input type="hidden" name="classroom_id" class="form-control" value="@Model.m_llClassRoomId">
                    <div class="form-group">
                        <button type="submit" class="btn btn-block btn-outline-primary">Yes</button>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="resetAddTopicModal()">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade top" id="fileUploadModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-full-height modal-top" role="document">
        <!--Content-->
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header ">
                <h4 class="modal-title w-100 " id="myModalLabel"> <b>Upload Items:</b></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <!--Body-->
            <div class="modal-body">
                <div class="card-img-top classroom-background">
                    <i class="fa fa-download upload-icon" aria-hidden="true"></i>
                    <div class="form-group">
                        <h4 for="exampleFormControlFile1">Upload new video/Image</h4>
                        <button type="button" class="btn btn-outline-primary">Upload</button>
                    </div>
                </div>
            </div>
            <!--Footer-->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!--/.Content-->
    </div>
</div>
<div class="modal fade top" id="studentMeetingJoinedModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-full-height modal-top" role="document">
        <!--Content-->
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header ">
                <h4 class="modal-title w-100 "> <b>Student Joined To Meeting Details:</b></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <!--Body-->
            <div class="modal-body">
                <div class="card-img-top ">
                    <div class="table-responsive ">
                        <table id="studentMeetingTable" class="table-responsive table-hover" style="display:none">
                            <thead class="thead-dark">
                                <tr>
                                    <th>S.No.</th>
                                    <th class="p-2">Student Name</th>
                                    <th class="p-2">Joining Time</th>
                                </tr>
                            </thead>

                            <tbody id="tableBodyStudentMeetingDetails"></tbody>
                        </table>
                        <div id="spinnerStudentMeetingDetails" class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>

                    <div class="card text-center" id="footerStudentsMeetingJoined" style="display:none">
                        <div class="card-body">
                            <h6 class="card-title"> No students have joined.</h6>
                        </div>

                    </div>
                </div>
            </div>
            <!--Footer-->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!--/.Content-->
    </div>
</div>
<div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="infomodal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="infoTitle">Success</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h3 id="infoMessage">Post added successfully</h3>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="shareModal" tabindex="-1" role="dialog" aria-labelledby="infomodal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="infoTitle">Sharing details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h4>1. Use below link to join the classroom</h4>
                <div class="control-buttons">
                    <p>Share url: <input type="text" readonly="readonly" id="test-url-2" value="@Model.m_strShareUrl" /><span><button class="btn-sm btn-primary ml-2" onclick="copyText2()">copy<i class="ml-1 fa fa-copy"></i></button></span></p>
                </div>
                <h4>2. Please ask student to use below details to join classroom.</h4>
                <p><b>Classroom Id:</b> @Model.m_llClassRoomId</p>
                <p><b>Access code:</b> @Model.m_strShareCode</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="successModal1" tabindex="-1" role="dialog" aria-labelledby="infomodal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered border-success" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="infoTitle">Success</h5> 
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="location.reload()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h3 id="infoMessage" class="text-success"><span><i class="fa fa-check"></i></span> details updated successfully</h3>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="location.reload()">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="errorModal1" tabindex="-1" role="dialog" aria-labelledby="modalIndexCreatedTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="card border-danger modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalIndexCreatedTitle">Error</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-danger">
                <h3 id="courseIdGenerated"><span><i class="fa fa-warning"></i></span>Classroom details could not be updatd</h3>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script>

    tinymce.init({
        selector: '#classroomPost',
      plugins: ' preview  autolink lists  media     table   ',
      toolbar: ' undo redo |print preview media fullpage | forecolor backcolor styleselect | bold italic | alignleft aligncenter alignright alignjustify |bullist numlist |checklist code table',
      toolbar_mode: 'floating',
      tinycomments_mode: 'embedded',
      tinycomments_author: 'Author name',
    });

    function viewClassroomSharingDetails()
    {
        $("#shareModal").modal('show');

    }
    function requestUploadVideo()
    {
        $("#fileUploadModal").modal("show");
    }
    function requestStartMeeting() {
        $("#requestStartMeeting").modal("show");
    }
    function copyText() {
        var copyText = document.getElementById("test-url");
        copyText.select();
        document.execCommand("copy");
    }
    function copyText2() {
        var copyText = document.getElementById("test-url-2");
        copyText.select();
        document.execCommand("copy");
    }
    function callInsertNewPost(buttonid) {
        debugger
        var post = tinyMCE.activeEditor.getContent();
        if (post == "") { return; }
        $(buttonid).append('<i class="fa fa-spinner fa-spin" id="tempspinner"></i>');
        $(buttonid).disabled = true;

        if (true) {
            var _data =
            {
                "post": post,
                "classroom_id": "@Model.m_llClassRoomId"
            }
            $.ajax({
                headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
                type: "POST",
                data: JSON.stringify(_data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "/api/v1/instructor/InsertNewPostToClassroom",
                success: function (data) {
                    debugger;
                    if (data != null && data.response_code == 1) {
                        $("#successModal").modal("show");
                    }
                    else {
                        $("#errorModal").modal("show");
                    }
                    $(buttonid).disabled = false;
                    $(buttonid).find(":first-child").remove();
                },
                error: function (data) {
                    $("errorModal").modal("show");
                    $(buttonid).disabled = false;
                    $(buttonid).find(":first-child").remove();
                }
            });
        }
        else {
            $(buttonid).disabled = false;
            $(buttonid).find(":first-child").remove();
        }
    }
    function activateClassroom() {
        debugger;
        $.ajax({
            headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/api/v1/instructor/activateclassroom?id=@Model.m_llClassRoomId",
            success: function (data) {
                if (data != null && data.response_code == 1) {
                    location.reload();
                }
            }
        });
    }

</script>
<script type="text/javascript">
        (function () {
            'use strict';
            pageShowEvents();
        })();
        function pageShowEvents()
        {
            //runTimer();
        }
        function onPageHideEvents()
        {
            clearInterval(messageInerval);
        }


        function getMeetingDetails() {
        //debugger;
            $.ajax({
            headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/api/v1/instructor/GetAllMeetingsForClassroom?ClassroomId=@Model.m_llClassRoomId",
            success: function (data) {
                debugger;
                var sNo = 0;
                if (data != null && data.response_code == 1 && data.meeting_details != null && data.meeting_details.length>0) {
                    var meetings = data.meeting_details;
                    $('#tableBody').empty();
                    for (var i = 0; i < meetings.length; i++) {
                        sNo++;
                        var rows = '<tr><td scope="row" ><button type="button" class="btn btn-link font-weight-bold" onclick="getStudentMeetingDetails('.concat(meetings[i].meeting_id) + ')">' + sNo + '</button></td>'
                        + '<td>' + meetings[i].meeting_start_time + '</td><td>' + meetings[i].meeting_finish_time + '</td>'
                         + '<td>' + meetings[i].participants_count + '</td>'
                        + '<td>' + meetings[i].meeting_status + '</td>'
                        +'</tr>';
                        $('#tableBody').append(rows);
                        $("#spinner").remove();
                        $("#coursesTable").show();
                    }
                    $('#coursesTable').DataTable();

                }
                else {
                    $("#footer").show();
                    $("#spinner").remove();
                }
            }
    });
        }
    function getStudentDetails() {
        //debugger;
        $.ajax({
            headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/api/v1/instructor/GetAllStudnetJoinedToClassroom?ClassroomId=@Model.m_llClassRoomId",
            success: function (data) {
                debugger;
                var sNo = 0;
                if (data != null && data.response_code == 1 && data.student_details != null && data.student_details.length > 0) {
                    var students = data.student_details;
                    $('#tableBodyStudentDetails').empty();
                    for (var i = 0; i < students.length; i++) {
                        sNo++;
                        var rows = '<tr><td scope="row" ><button type="button" class="btn btn-link font-weight-bold" onclick="getCourseIndexDetails('.concat(students[i].student_id) + ')">' + sNo + '</button></td>'
                        + '<td>' + students[i].student_name + '</td><td>' + students[i].date_of_joining + '</td>'
                        + '</tr>';
                        $('#tableBodyStudentDetails').append(rows);
                        $("#spinnerStudentDetails").remove();
                        $("#studentDetailsTable").show();
                    }
                    $('#studentTable').DataTable();

                }
                else {
                    $("#footerStudentsJoined").show();
                    $("#spinnerStudentDetails").remove();
                }
            }
        });
    }
    function getStudentMeetingDetails(meetingId) {
        //debugger;
        $.ajax({
            headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
            @*data: {
                "MeetingId": meetingId,
                "ClassroomId": "@Model.m_llClassRoomId"
            },*@
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/api/v1/instructor/GetAllStudentsJoinedToMeeting?ClassroomId=@Model.m_llClassRoomId&MeetingId=".concat(meetingId),
            success: function (data) {
                debugger;
                var sNo = 0;
                if (data != null && data.response_code == 1 && data.student_details != null && data.student_details.length > 0) {
                    var students = data.student_details;

                    for (var i = 0; i < students.length; i++) {
                        sNo++;
                        var rows = '<tr><td scope="row" ><button type="button" class="btn btn-link font-weight-bold" onclick="getCourseIndexDetails('.concat(students[i].student_id) + ')">' + sNo + '</button></td>'
                        + '<td>' + students[i].student_name + '</td><td>' + students[i].time_of_joining + '</td>'
                        + '</tr>';
                        $("#footerStudentsMeetingJoined").hide();
                        $('#tableBodyStudentMeetingDetails').empty();
                        $('#tableBodyStudentMeetingDetails').append(rows);
                        $("#spinnerStudentMeetingDetails").remove();
                        $("#studentMeetingTable").show();
                        $("#studentMeetingJoinedModal").modal('show');
                    }
                    $('#studentMeetingTable').DataTable();

                }
                else {
                    $("#footerStudentsMeetingJoined").show();
                    $("#spinnerStudentMeetingDetails").remove();
                }
            }
        });
    }
    
    function callSubmitMessage(buttonid) {
        debugger
        syncFlag = true;
        var post = $("#classroomMessage").val();
        if (post == "") { return; }
        $(buttonid).append('<i class="fa fa-spinner fa-spin" id="tempspinner"></i>');
        $(buttonid).disabled = true;
        if (true) {
            var _data =
            {
                "message": post,
                "classroom_id": "@Model.m_llClassRoomId"
            }
            $.ajax({
                headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
                type: "POST",
                data: JSON.stringify(_data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "/api/v1/instructor/InsertNewClassroomMessage",
                success: function (data) {
                    debugger;
                    if (data != null && data.response_code == 1) {
                        $("#classroomMessage").val("")
                        getAllMessagesAsync();
                    }
                    else {
                        $("#errorModal1").modal("show");
                    }
                    $(buttonid).disabled = false;
                    $(buttonid).find(":first-child").remove();
                    syncFlag = false;
                },
                error: function (data) {
                    $("errorModal").modal("show");
                    $(buttonid).disabled = false;
                    $(buttonid).find(":first-child").remove();
                }
            });
        }
        else {
            $(buttonid).disabled = false;
            $(buttonid).find(":first-child").remove();
        }
    }
    var messageInerval
    function runTimer() {
        messageInerval = setInterval(getAllMessagesAsync, 1000);
    }
    function getAllMessages() {
        $.ajax({
          
            headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/api/v1/instructor/GetAllClassroomMessage?ClassroomId=@Model.m_llClassRoomId",
            success: function (data) {
                debugger;
                //stopCourseSpinner();
                if (data != null && data.response_code == 1) {
                    var currentSessionLastMessageId=-1;
                    $("#questionContainer").empty();
                    var row = "";
                    for (var i = 0; i < data.message_details.length; i++) {
                        currentSessionLastMessageId = data.message_details[i].message_id;
                        
                        if (data.message_details[i].is_instructor == false) {
                          
                            row= ' <div class="container-fluid">'
                                + '<p class="messge-sender"><spna><i class="fa fa-user mr-2"></i></span>' + data.message_details[i].student_name + '</p>'
                                          + '<p class="ui-form-chat-instructor">' + data.message_details[i].message + '</p>'
                                          + '<p class="time_date_instructor">' + data.message_details[i].message_creation_time + '</p>'
                                      + '</div>';
                        }
                        else {
                            row='<div class="container-fluid">'

                                          + '<p class="ui-form-chat">' + data.message_details[i].message + '</p>'
                                          + '<p class="time_date">' + data.message_details[i].message_creation_time + '</p>'
                                      + '</div>';
                            $("#questionContainer").append(row);
                            $("#messagesContainer").scrollTop($("#messagesContainer")[0].scrollHeight);
                        }
                       
                    }
                    if (currentSessionLastMessageId != -1) {
                        lastMessageId = currentSessionLastMessageId;
                    }
                   
                }
            }
        });
    }
    function getAllMessagesAsync() {
        if (lastMessageId == -1||syncFlag)
        {
            return;
        }
        $.ajax({
            headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/api/v1/instructor/GetAllClassroomMessageAfterLast?ClassroomId=@Model.m_llClassRoomId&LastMessageId=".concat(lastMessageId),
            success: function (data) {
                //stopCourseSpinner();
                if (data != null && data.response_code == 1) {
                    //$("#questionContainer").empty();
                    for (var i = 0; i < data.message_details.length; i++) {
                        lastMessageId = data.message_details[i].message_id;
                        if (data.message_details[i].is_instructor == false) {
                            var row = ' <div class="container-fluid">'
                                + '<p class="messge-sender"><spna><i class="fa fa-user mr-2"></i></span>' + data.message_details[i].student_name + '</p>'
                                          + '<p class="ui-form-chat-instructor">' + data.message_details[i].message + '</p>'
                                          + '<p class="time_date_instructor">' + data.message_details[i].message_creation_time + '</p>'
                                      + '</div>';
                        }
                        else {
                            var row = ' <div class="container-fluid">'

                                          + '<p class="ui-form-chat">' + data.message_details[i].message + '</p>'
                                          + '<p class="time_date">' + data.message_details[i].message_creation_time + '</p>'
                                      + '</div>';
                        }
                        $("#questionContainer").append(row);
                        $("#messagesContainer").scrollTop($("#messagesContainer")[0].scrollHeight);
                    }
                }
            }
        });
    }
    function showMessages()
    {
        hideAll();
        runTimer();
        $("#navMessagesContainer").show();
        getAllMessages();
    }
    function showUpdateMeeting()
    {
        hideAll();
        $("#navUpdateDetails").show();
    }
    function hideAll()
    {
        clearInterval(messageInerval);
        $(".nav-link").removeClass("active");
        $("#navMessagesContainer").hide();
        $("#navPreviousMeetings").hide();
        $("#navStudentsJoined").hide();
        $("#navUpdateDetails").hide();
    }
    function showPreviousMeetings() {
        hideAll();
       
        $("#navPreviousMeetings").addClass("active");
        $("#navPreviousMeetings").show();
        getMeetingDetails();
    }
    function showStudentsJoined() {
        hideAll();
        $("#navStudentsJoined").show();
        getStudentDetails();
    }
    var syncFlag = false;
    var lastMessageId = -1;

    function callUpdateClassRoomDetails(buttonid) {
        $(buttonid).append('<i class="fa fa-spinner fa-spin" id="tempspinner"></i>');
        $(buttonid).disabled = true;
        var classRoomName = $("#classroomName").val();
        var classRoomDescription = $("#classroomDescription").val();
        var BackGroundUrl = $("#classroomBackGroundUrl").val();
        if (validateInputField(classroomName) && validateInputField(classroomDescription)) {
            var _data =
            {
                "classroom_id":"@Model.m_llClassRoomId",
                "classroom_name": classRoomName,
                "classroom_description": classRoomDescription,
                "background_url": BackGroundUrl
            }
            $.ajax({
                headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
                type: "POST",
                data: JSON.stringify(_data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "/api/v1/instructor/UpdateClassroomDetails",
                success: function (data) {
                    debugger;
                    if (data != null && data.response_code == 1) {
                        $("#successModal1").modal("show");
                        
                    }
                    else {
                        $("#errorModal").modal("show");
                    }
                    $(buttonid).disabled = false;
                    $(buttonid).find(":first-child").remove();
                },
                error: function (data) {
                    $("errorModal").modal("show");
                    $(buttonid).disabled = false;
                    $(buttonid).find(":first-child").remove();
                }
            });
        }
        else {
            $(buttonid).disabled = false;
            $(buttonid).find(":first-child").remove();
        }
    }
    function validateInputField(id) {
        if ($(id).val() == "") {
            $(id).addClass("is-invalid");
            return false;
        }
        else {
            $(id).addClass("is-valid").removeClass("is-invalid");
            return true;
        }
    }
    function viewAllClassroomAssignments() {
       
    }
    function viewAllClassroomTests() {

    }
    function addNewClassroomAssignment() {

    }
    function addNewClassroomTest() {

    }

</script>